{"version":3,"file":"connection-plugin.min.js","sources":["../src/utils.ts","../src/picker/view.ts","../src/picker/index.ts","../src/flow.ts","../src/index.ts"],"sourcesContent":["import { Emitter, Connection } from 'rete';\r\nimport { EventsTypes } from 'rete/types/events';\r\n\r\nfunction toTrainCase(str: string) {\r\n    return str.toLowerCase().replace(/ /g, '-');\r\n}\r\n\r\nexport function getMapItemRecursively<T extends any>(map: WeakMap<Element, T>, el: Element): T | null {\r\n    return map.get(el) || (el.parentElement ? getMapItemRecursively(map, el.parentElement) : null);\r\n}\r\n\r\nexport function defaultPath(points: number[], curvature: number) {\r\n    const [x1, y1, x2, y2] = points;\r\n    const hx1 = x1 + Math.abs(x2 - x1) * curvature;\r\n    const hx2 = x2 - Math.abs(x2 - x1) * curvature;\r\n\r\n    return `M ${x1} ${y1} C ${hx1} ${y1} ${hx2} ${y2} ${x2} ${y2}`;\r\n}\r\n\r\nexport function renderPathData(emitter: Emitter<EventsTypes>, points: number[], connection?: Connection) {\r\n    const data = { points, connection, d: '' };\r\n    \r\n    emitter.trigger('connectionpath', data);\r\n    \r\n    return data.d || defaultPath(points, 0.4);\r\n}\r\n\r\nexport function updateConnection({ el, d } : { el: HTMLElement, d: string }) {\r\n    const path = el.querySelector('.connection path');\r\n\r\n    if (!path) throw new Error('Path of connection was broken');\r\n\r\n    path.setAttribute('d', d);\r\n}\r\n\r\nexport function renderConnection({ el, d, connection } : { el: HTMLElement, d: string, connection?: Connection }) {\r\n    const classed = !connection?[]:[\r\n        'input-' + toTrainCase(connection.input.name),\r\n        'output-' + toTrainCase(connection.output.name),\r\n        'socket-input-' + toTrainCase(connection.input.socket.name),\r\n        'socket-output-' + toTrainCase(connection.output.socket.name)\r\n    ];\r\n\r\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\r\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path')\r\n\r\n    svg.classList.add('connection', ...classed);\r\n    path.classList.add('main-path');\r\n    path.setAttribute('d', d);\r\n\r\n    svg.appendChild(path);\r\n    el.appendChild(svg);\r\n\r\n    updateConnection({ el, d });\r\n}","import { Output, Input, Emitter } from 'rete';\r\nimport { EditorView } from 'rete/types/view/index';\r\nimport { EventsTypes } from 'rete/types/events';\r\nimport { renderConnection, renderPathData, updateConnection } from '../utils';\r\n\r\nexport class PickerView {\r\n\r\n    private el: HTMLElement;\r\n\r\n    constructor(\r\n        private emitter: Emitter<EventsTypes>,\r\n        private editorView: EditorView\r\n    ) {\r\n        this.el = document.createElement('div');\r\n        this.el.style.position = 'absolute';\r\n        this.editorView.area.appendChild(this.el);\r\n    }\r\n\r\n    updatePseudoConnection(io: Output | Input | null) {\r\n        if (io !== null) {\r\n            this.renderConnection(io);\r\n        } else if (this.el.parentElement) {\r\n            this.el.innerHTML = '';\r\n        }\r\n    }\r\n\r\n    private getPoints(io: Output | Input): number[] {\r\n        const mouse = this.editorView.area.mouse;\r\n\r\n        if(!io.node) throw new Error('Node in output/input not found')\r\n    \r\n        const node = this.editorView.nodes.get(io.node);\r\n\r\n        if(!node) throw new Error('Node view not found')\r\n    \r\n        const [x1, y1] = node.getSocketPosition(io);\r\n\r\n        return io instanceof Output\r\n            ? [x1, y1, mouse.x, mouse.y]\r\n            : [mouse.x, mouse.y, x1, y1];\r\n    }\r\n\r\n    updateConnection(io: Output | Input) {\r\n        const d = renderPathData(this.emitter, this.getPoints(io));\r\n\r\n        updateConnection({ el: this.el, d });\r\n    }\r\n\r\n    renderConnection(io: Output | Input) {\r\n        const d = renderPathData(this.emitter, this.getPoints(io));\r\n\r\n        renderConnection({ el: this.el, d });\r\n    }\r\n}","import { NodeEditor, Input, Output, Connection } from 'rete';\r\nimport { PickerView } from './view';\r\n\r\nexport class Picker {\r\n\r\n    private editor: NodeEditor;\r\n    private _io: Output | Input | null = null;\r\n    public view: PickerView;\r\n\r\n    constructor(editor: NodeEditor) {\r\n        this.editor = editor;\r\n        this.view = new PickerView(editor, editor.view);\r\n\r\n        editor.on('mousemove', () => this.io && this.view.updateConnection(this.io));\r\n    }\r\n\r\n    get io() : Output | Input | null {\r\n        return this._io;\r\n    }\r\n\r\n    set io(io: Output | Input | null) {\r\n        this._io = io;\r\n        this.view.updatePseudoConnection(io);\r\n    }\r\n\r\n    reset() {\r\n        this.io = null;\r\n    }\r\n\r\n    pickOutput(output: Output) {\r\n        if (!this.editor.trigger('connectionpick', output)) return;\r\n        \r\n        if (this.io instanceof Input) {\r\n            if(!output.multipleConnections && output.hasConnection())\r\n                this.editor.removeConnection(output.connections[0])\r\n    \r\n            this.editor.connect(output, this.io);\r\n            this.reset();\r\n            return;\r\n        }\r\n\r\n        if (this.io) this.reset();\r\n        this.io = output;\r\n    }\r\n\r\n    pickInput(input: Input) {\r\n        if (!this.editor.trigger('connectionpick', input)) return;\r\n\r\n        if (this.io === null) {\r\n            if (input.hasConnection()) {\r\n                this.io = input.connections[0].output;\r\n                this.editor.removeConnection(input.connections[0]);\r\n            } else {\r\n                this.io = input;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if (!input.multipleConnections && input.hasConnection())\r\n            this.editor.removeConnection(input.connections[0]);\r\n        \r\n        if (!this.io.multipleConnections && this.io.hasConnection())\r\n            this.editor.removeConnection(this.io.connections[0]);\r\n        \r\n        if (this.io instanceof Output && this.io.connectedTo(input)) {\r\n            let connection = input.connections.find(c => c.output === this.io);\r\n\r\n            if(connection) {\r\n                this.editor.removeConnection(connection);\r\n            }\r\n        }\r\n\r\n        if(this.io instanceof Output) {\r\n            this.editor.connect(this.io, input);\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    pickConnection(connection: Connection) {\r\n        const { output } = connection;\r\n\r\n        this.editor.removeConnection(connection);\r\n        this.io = output;\r\n    }\r\n}","import { IO, Input, Output } from 'rete';\r\nimport { Picker } from './picker';\r\n\r\nexport type FlowParams = { input?: Input, output?: Output };\r\n\r\nexport class Flow {\r\n\r\n    private picker: Picker;\r\n    private target?: IO | null;\r\n\r\n    constructor(picker: Picker) {\r\n        this.picker = picker;\r\n        this.target = null;\r\n    }\r\n\r\n    private act({ input, output }: FlowParams) {\r\n        if (this.unlock(input || output)) return\r\n\r\n        if (input)\r\n            this.picker.pickInput(input)\r\n        else if (output)\r\n            this.picker.pickOutput(output)\r\n        else\r\n            this.picker.reset();\r\n    }\r\n\r\n    public start(params: FlowParams, io?: IO) {\r\n        this.act(params);\r\n        this.target = io;\r\n    }\r\n\r\n    public complete(params: FlowParams = {}) {\r\n        this.act(params);\r\n    }\r\n\r\n    public hasTarget() {\r\n        return Boolean(this.target);\r\n    }\r\n\r\n    private unlock(io?: IO) {\r\n        const target = this.target;\r\n\r\n        this.target = null;\r\n\r\n        return target && target === io;\r\n    }\r\n}","import { NodeEditor } from 'rete';\r\nimport { renderConnection, renderPathData, updateConnection, getMapItemRecursively } from './utils';\r\nimport { Picker } from './picker';\r\nimport { Flow, FlowParams } from './flow';\r\nimport './events';\r\nimport './index.sass';\r\n\r\nfunction install(editor: NodeEditor) {\r\n    editor.bind('connectionpath');\r\n    editor.bind('connectiondrop');\r\n    editor.bind('connectiondropelement');\r\n    editor.bind('connectionpick');\r\n    editor.bind('resetconnection');\r\n    \r\n    const picker = new Picker(editor);\r\n    const flow = new Flow(picker);\r\n    const socketsParams = new WeakMap<Element, FlowParams>();\r\n    \r\n    function pointerDown(this: HTMLElement, e: PointerEvent) {\r\n        const flowParams = socketsParams.get(this);\r\n\r\n        if(flowParams) {\r\n            const { input, output } = flowParams;\r\n            \r\n            editor.view.container.dispatchEvent(new PointerEvent('pointermove', e));\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            flow.start({ input, output }, input || output);\r\n        }\r\n    }\r\n\r\n    function pointerUp(this: Window, e: PointerEvent) {\r\n        const flowEl = document.elementFromPoint(e.clientX, e.clientY);\r\n\r\n        if(picker.io) {\r\n            editor.trigger('connectiondrop', picker.io);\r\n            editor.trigger('connectiondropelement', flowEl); // Elementを渡す(自作イベント)\r\n        }\r\n        if(flowEl) {\r\n            flow.complete(getMapItemRecursively(socketsParams, flowEl) || {})\r\n        }\r\n    }\r\n\r\n    editor.on('resetconnection', () => flow.complete());\r\n\r\n    editor.on('rendersocket', ({ el, input, output }) => {\r\n        socketsParams.set(el, { input, output });\r\n\r\n        el.removeEventListener('pointerdown', pointerDown);\r\n        el.addEventListener('pointerdown', pointerDown);\r\n    });\r\n\r\n    window.addEventListener('pointerup', pointerUp);\r\n\r\n    editor.on('renderconnection', ({ el, connection, points }) => {\r\n        const d = renderPathData(editor, points, connection);\r\n\r\n        renderConnection({ el, d, connection })\r\n    });\r\n\r\n    editor.on('updateconnection', ({ el, connection, points }) => {\r\n        const d = renderPathData(editor, points, connection);\r\n\r\n        updateConnection({ el, d });\r\n    });\r\n\r\n    editor.on('destroy', () => {\r\n        window.removeEventListener('pointerup', pointerUp);\r\n    });\r\n}\r\n\r\nexport default {\r\n    name: 'connection',\r\n    install\r\n}\r\nexport { defaultPath } from './utils';"],"names":["toTrainCase","str","toLowerCase","replace","defaultPath","points","curvature","x1","y1","x2","y2","hx1","Math","abs","hx2","renderPathData","emitter","connection","data","d","trigger","updateConnection","el","path","querySelector","Error","setAttribute","renderConnection","classed","input","name","output","socket","svg","document","createElementNS","classList","add","appendChild","PickerView","editorView","createElement","style","position","area","this","io","parentElement","innerHTML","mouse","node","nodes","get","getSocketPosition","Output","x","y","getPoints","Picker","editor","view","on","_this","Input","multipleConnections","hasConnection","removeConnection","connections","connect","reset","connectedTo","find","c","_this2","_io","updatePseudoConnection","Flow","picker","target","unlock","pickInput","pickOutput","params","act","Boolean","install","bind","flow","socketsParams","WeakMap","pointerDown","e","flowParams","container","dispatchEvent","PointerEvent","preventDefault","stopPropagation","start","pointerUp","flowEl","elementFromPoint","clientX","clientY","complete","getMapItemRecursively","map","set","removeEventListener","addEventListener","window"],"mappings":"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"}